---
const { job, start, timelinePosition } = Astro.props as {
	job: Job;
	start: boolean;
	timelinePosition: string;
};
---

<li>
	{!start && <hr />}
	<div class="timeline-middle">
		<svg
			xmlns="http://www.w3.org/2000/svg"
			viewBox="0 0 20 20"
			fill="currentColor"
			class="h-5 w-5"
			><path
				fill-rule="evenodd"
				d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z"
				clip-rule="evenodd"></path></svg
		>
	</div>
	<div class={`${timelinePosition} my-10 md:mb-0`}>
		<time class="font-mono italic">{job.date}</time>
		<div class="text-lg font-black">
			{job.title}
			<br />
			<span class="font-bold">{job.company}</span>
		</div>
		<p>
			{job.description}
		</p>
		{
			job.frontend?.length > 0 && job.backend?.length > 0 && (
				<section class="grid grid-cols-2 gap-1">
					<div class="col-span-1 text-left p-2">
						<h3 class="mb-1">Frontend</h3>

						<div class="flex flex-wrap gap-1">
							{job.frontend.map((tech) => (
								<div class="badge badge-outline">{tech}</div>
							))}
						</div>
					</div>
					<div class="col-span-1 text-left p-2">
						<h3 class="mb-1">Backend</h3>

						<div class="flex flex-wrap gap-1">
							{job.backend.map((tech) => (
								<div class="badge badge-outline">{tech}</div>
							))}
						</div>
					</div>
				</section>
			)
		}
	</div>
	<hr />
</li>
